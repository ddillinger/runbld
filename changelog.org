* runbld changes
** NEXT
   - Replaced Facter with a Java based solution called Oshi,
     https://github.com/oshi/oshi  See
     https://github.com/elastic/runbld/pull/125 for details.
** 1.5.19
   - Add timeout when reading from stdin.  Sometimes subprocesses can
     spawn other processes and somewhere along the line never end up
     closing the streams.
** 1.5.17
   - added more debug logging
   - fail fast when encountering a 404 during ec2-meta
   - add ability to configure the filename pattern for junit test
     output (config =tests.junit-filename-pattern=)
** 1.5.16
   - prevent errors from =runbld.hosting.aws-ec2/ec2-meta= from
     killing the build
** 1.5.15
   - deepen a shallow clone to include the last good commit
   - add config option to disable searching for =build_metadata=
** 1.5.13
   - add =JAVA_HOME/bin= to the =PATH= of the wrapped process.
** 1.5.12
   - prefer a non-default =branch_specifier= environment variable over
     =--last-good-commit= when choosing which commit/branch to pull
** 1.5.11
   - Hide the empty line when there is no text to display in the Slack
     message
   - Add the start time when we initially add the build to ES.
** 1.5.10
   - Reduce number of shards to 2
   - Rework the slack notifications more visually pleasant and concise
** 1.5.9
   - Retry assertion failures when calling Facter
   - Improve error message when runbld is run from the wrong directory
     and cannot find the VCS info
   - Fix a bug with looking up environment variables
   - Add a runbld docker file for runbld testing
** 1.5.8
   - Add retries around gathering system facts
   - Add another exception to the list that we ignore when attempting
     to determine if the host is an EC2 node.
** 1.5.7
   - Small bugfix to make sure that the =first-success= setting takes
     precedence over =success= (i.e., no need to set =success= to
     false to make =first-success= work)
** 1.5.6
   - Parse the job name by splitting on + rather than via regex
** 1.5.5
   - Parse git commits that are GPG-signed, but the signature doesn't include
     header information.
** 1.5.4
   - Search for =build_metadata= files in the root execution directory
     (Java's =user.dir=) rather than from the wrapped script's
     execution directory.
** 1.5.3
   - Add =basedir= option to scm config to allow source to be checked
     out into a subdirectory relative to the current working directory
     of the script.
   - Tweak the HTML email template to turn the =build.console-url=
     into a real link
   - Fix the MIME format of the email to properly separate the
     multipart/alternative email bodies (html and plain text) from the
     attachments using multipart/mixed
** 1.5.2
   - always set build_metadata when it's passed in via the env
** 1.5.1
   - add ';' between concatenated metadata files
** 1.5.0
   - Add ability to store/restore build metadata.  The wrapped script
     may write out files whose name start with =build_metadata= and
     the contents of those files will be concatenated and stored in
     ES.  Future executions for the job will restore the metadata into
     an environment variable named =BUILD_METADATA=
** 1.4.10
   - Add build-id to debug email subject
   - Skip (but report) poorly formatted XML files
** 1.4.9
   - Add build-id to email subject
** 1.4.8
   - Change how we read in the script file by using the absolute path
** 1.4.7
   - Add some extra debug information regarding which profile matched
     in runbld.conf and what the cwd is
** 1.4.6
   - Use reply-to addresses when present in the email config
** 1.4.5
   - Minor bug fix to actually include how to reproduce gradle builds
     in the build email
** 1.4.4
   - Retry bulk indexing failures when indexing log lines
   - Include instructions on how to reproduce gradle builds, if available
** 1.4.3
   - Jenkins allows empty test results and runbld shouldn't fail when
     exposed to one.
** 1.4.2
   - Tweaked debug output
   - Corrected commit id in notification when last-good-commit is used
** 1.4.1
   - Catch all throwables
   - Log the status of the debug log
** 1.4.0
   - New debug log feature to aid in future development
   - Minor fix to git log parsing
** 1.3.11
   - Fetch from git before checking out the last-good-commit
** 1.3.10
   - Read the branch_specifier environment variable to allow for
     parameterized Jenkins builds.
** 1.3.9
   - Ensure all arguments to the shell command are strings
** 1.3.8
   - Update and switch branches (if needed) an already cloned repo
     when SCM is specified
** 1.3.7
   - Record in ES early in the runbld process so failed runblds can be
     tracked
** 1.3.6
   - Infer the branch from the job name when it is not specified in
     the SCM config.
** 1.3.5
   - Trim the text from a failed testcase when creating the attachment
     filename
   - Always use -server jvm-arg to work around a limitation of the JVM
     on ARM
   - Retry all HTTP requests
** 1.3.4
   - Ensure that ignoring unavailable reference repositories works with older
     versions of Git.
** 1.3.3
   - Correctly order attachments and email bodies.
   - Ignore unavailable reference repositories.
** 1.3.2
   - Ensure that branches are parsed as strings.
** 1.3.1
   - Align HTML and plaintext email contents.
** 1.3.0
   - Add source control management.
   - Send plaintext emails in addition to HTML.
** 1.2.1
   - Fix bug in gradle log discovery heuristic query
** 1.2.0
   - [#57](elastic/runbld#57) Add gradle log information to emails
** 1.1.3
   - Fix bug where git module couldn't handle gpg-signed commits
** 1.1.2  
   - Fix bug in error condition with new function called with wrong arity
** 1.1.1
   - Fix bug in new git module that didn't handle shallow clones (a commit has a
     =parent=, but the parent SHA doesn't exist)
** 1.1.0
   - [#56](elastic/runbld#56) Optionally check last successful build for commit SHA
